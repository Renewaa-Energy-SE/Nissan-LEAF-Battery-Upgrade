name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install ARM GCC Toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-none-eabi binutils-arm-none-eabi make

      - name: Compile Firmware
        id: compile
        working-directory: Software/CANBRIDGE-2port/source
        run: make all
      
      - name: Prepare Artifacts
        run: |
          mkdir -p artifacts
          cp Software/CANBRIDGE-2port/source/build/can-bridge-firmware.hex artifacts/can-bridge-firmware.hex

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: firmware-artifact
          path: artifacts/can-bridge-firmware.hex
          if-no-files-found: error
          retention-days: 7 # Keep artifacts for a week

  release:
    runs-on: ubuntu-latest
    # Only run for pushes to the main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    permissions:
      contents: write # Required to create a release
    steps:
      - name: Download firmware artifact
        uses: actions/download-artifact@v4
        with:
          name: firmware-artifact
          path: release-files

      - name: Create and Upload Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: release-${{ github.sha }}
          name: Release ${{ github.sha }}
          generate_release_notes: true
          files: release-files/can-bridge-firmware.hex